<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
       	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd ">
	
	<!-- 扫描的包 -->
	<context:component-scan base-package="com.novo.dao,com.novo.service"></context:component-scan>
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
	<!-- 扫描jdbc文件 -->
	<context:property-placeholder location="classpath:jdbc.properties" />
	
	
	
	<!-- datasource -->
	<!-- <bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="url" value="${jdbc.url}"></property>
		<property name="username" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
		<property name="driverClassName" value="${jdbc.driver}"></property>
	</bean> -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driver}"></property>
        <property name="jdbcUrl" value="${jdbc.url}"></property>
        <property name="user" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
         <!-- 连接池中保留的最小连接数。 -->
        <property name="minPoolSize" value="5" />

       <!--  连接池中保留的最大连接数。Default: 15 -->
        <property name="maxPoolSize" value="30" />

       <!--  初始化时获取的连接数，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
        <property name="initialPoolSize" value="10"/>

       <!--  最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
        <property name="maxIdleTime" value="60"/>

        <!-- 当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
        <property name="acquireIncrement" value="5" />

        <!-- JDBC的标准参数，用以控制数据源内加载的PreparedStatements数量。但由于预缓存的statements  
            属于单个connection而不是整个连接池。所以设置这个参数需要考虑到多方面的因素。  
            如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。Default: 0 -->
        <property name="maxStatements" value="0" />

       <!--  每60秒检查所有连接池中的空闲连接。Default: 0 -->
        <property name="idleConnectionTestPeriod" value="60" />

       <!--  定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 -->
        <property name="acquireRetryAttempts" value="30" />

       <!--  获取连接失败将会引起所有等待连接池来获取连接的线程抛出异常。但是数据源仍有效  
            保留，并在下次调用getConnection()的时候继续尝试获取连接。如果设为true，那么在尝试  
            获取连接失败后该数据源将申明已断开并永久关闭。Default: false -->
        <property name="breakAfterAcquireFailure" value="false" />
        
    </bean>
    
	<!-- sesssionFactory -->
	<bean id="localSessionFactoryBean"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<!-- 配置数据源 -->
		<property name="dataSource" ref="dataSource"></property>
		<!-- 配置hibernate特有的属性 -->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.jdbc.use_scrollable_resultset">false</prop> 
			</props>
		</property>
		<!-- 扫描hibernate 对象映射 -->
		<property name="packagesToScan" value="com.novo.entity"></property>
	</bean>

	<!-- 配置hibernate专用的事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="localSessionFactoryBean"></property>
	</bean>

	<!-- 根据事务管理器获得事务通知 -->
	<tx:advice id="hibernateAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- <tx:method name="save*"/> -->
			<tx:method name="*" propagation="REQUIRED" isolation="DEFAULT"
				rollback-for="Execption" />
			<!-- <tx:method name="find*" read-only="true" />
			<tx:method name="get*" read-only="true" /> -->
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<!-- 切点是我们那些方法需要事务管理，一般情况是service 的接口 -->
		<aop:pointcut expression="execution(* com.novo.service.*.*(..)  )"
			id="myPointCut" />
		<!-- 增强通知把切点和事务通知进行关联 -->
		<aop:advisor advice-ref="hibernateAdvice" pointcut-ref="myPointCut" />
	</aop:config>
	
    <!--使用缓存可以提升效率
    <bean id="cachingConnectionFactory" class="org.springframework.jms.connection.CachingConnectionFactory">
        <property name="targetConnectionFactory" ref="jmsFactory"/>
        <property name="sessionCacheSize" value="1"/>
    </bean>

    <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="cachingConnectionFactory"/>
        <property name="messageConverter">
            <bean class="org.springframework.jms.support.converter.SimpleMessageConverter"/>
        </property>
    </bean>  -->

</beans>